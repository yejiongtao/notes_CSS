1.CSS定位机制
    三种基本的定位机制：普通流、浮动和绝对定位。
    普通流：除非专门指定，否则所有框都在普通流中定位。也就是说，普通流中的元素的位置由元素在 (X)HTML 中的位置决定。
        块级框从上到下一个接一个地排列，框之间的垂直距离是由框的垂直外边距计算出来。
        行内框在一行中水平布置。可以使用水平内边距、边框和外边距调整它们的间距。但是，垂直内边距、边框和外边距不影响行内框的高度。由一行形成的水平框称为行框（Line Box），行框的高度总是足以容纳它包含的所有行内框。不过，设置行高可以增加这个框的高度。

2.一切皆为框
    块级元素是块框，行级元素是行内框。
    可以用display属性改变生成的框的类型，block设置为块框，none设置为不是框（不显示）

3.定位实例（长度也可以用5%来）
    相对定位
        h2.pos_right
        {
        position:relative;
        left:20px;（相对于正常位置向右移20px）
        }

    绝对定位（可以只设置一个top，则水平方向按普通流的机制来）
        h2.pos_abs
        {
        position:absolute;
        left:100px;
        top:200px;（距离页面左侧，顶部的距离）
        }

    固定定位（fixed是相对于这个视窗，即拉动滚动条是不会改变其在屏幕上的位置的）
        h2.pos_fixed
        {
        position:fixed;
        right:20px;
        top:100px;
        }

    注意：
        相对定位，移动后的元素仍然占的是原来的空间，所以可能会导致覆盖其他框。也就是保留其在原来标准流之中的位置。
        绝对定位，会删除原来标准流中的位置。绝对定位是相对于最近的已定位祖先的位置，若没有则相对于最初的包含块。

4.块的其他一些属性
    使用滚动条显示块中溢出的内容
        div
        {
        width:200px;
        height:200px;
        overflow:auto;（默认值是visible，直接显示溢出的内容；若是scroll则可能放得下时也会出现滚动条）
        }
    
    裁剪元素（只用于绝对位置的）
        img.clip
        {
        position:absolute;
        top:100px;
        clip:rect(0px 50px 50px 0px);(top,right,bottom,left)（超出的会按照overflow属性来处理）
        }
    
    设置元素的堆叠顺序（只对定义位置的元素有效）
        img.bottom
        {
        position:fixed;
        top:0;
        z-index:-1;（默认是0，定义了位置的元素会在上面。数值越小越下面）
        }
        
5.CSS浮动
    float:left;（向左浮动，元素脱离标准流并向左移动，直到碰到包含框的左边缘或碰到另一个浮动框）
    （由于浮动框脱离了标准流，所以会有覆盖的情况出现）
    浮动框旁边的行框被缩短，从而给浮动框留出空间，行框围绕浮动框。因此，创建浮动框可以使文本围绕图像
        （比如让段落的第一个字符单独出现在左边）
    
    clear属性（left，right，both，none默认）
        定义了元素的哪边上不允许出现浮动元素
            例子：假设希望让一个图片浮动到文本块的左边，并且希望这幅图片和文本包含在另一个具有背景颜色和边框的元素中：
                .news {
                  background-color: gray;
                  border: solid 1px black;
                  }

                .news img {
                  float: left;
                  }

                .news p {
                  float: right;
                  }

                .clear {
                  clear: both;
                  }（由于浮动框脱离了标准流，如果没有这个的话，那个div里面会是空的）

                <div class="news">
                <img src="news-pic.jpg" />
                <p>some text</p>
                <div class="clear"></div>
                </div>
